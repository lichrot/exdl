import { whitespace, symbol, keyword } from "./token.exdl"

rule identifier = char+ ( symbol.dot char+ )*

rule terminal = symbol.quote char+ symbol.quote

rule syntax = ( comment | import_statement | declaration )*

rule comment = (
  | line  = symbol.slash[2] char* whitespace.newline
  | block = symbol.slash symbol.star char* symbol.star symbol.slash
)

rule import_statement =
  keyword.import
  symbol.brace.l
  identifier
  ( symbol.comma identifier )*
  symbol.brace.r
  keyword.from
  terminal

rule declaration = (
  | rule  = keyword.export? keyword.rule identifier symbol.equals production
  | token = keyword.export? keyword.token identifier symbol.equals production
)

rule production = ( terminal | set | subset ) multiplier

rule multiplier = symbol.multiplier | specific_multiplier

rule specific_multiplier =
  symbol.brace.l
  symbol.number+
  ( symbol.comma symbol.number* )?
  symbol.brace.r

rule set = (
  | inline    = symbol.pipe? member_production.inline ( symbol.pipe member_declaration.inline )*
  | enclosed  = symbol.paren.l member_production ( symbol.pipe member_declaration )* symbol.paren.r
  | range     = symbol.paren.l terminal symbol.dot{3} terminal symbol.paren.r
)

rule subset =
  identifier
  symbol.dot
  symbol.paren.l
  symbol.pipe?
  identifier
  ( symbol.pipe identifier )*
  symbol.paren.r

rule member_production = (
  | inline  = production
  | aliased = identifier symbol.equals production
)
